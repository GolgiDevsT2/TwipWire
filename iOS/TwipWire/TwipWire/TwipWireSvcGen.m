/* IS_AUTOGENERATED_SO_ALLOW_AUTODELETE=YES */
/* The previous line is to allow auto deletion */

#import "TwipWireSvcGen.h"

@implementation TweetFilter

@synthesize golgiIdIsSet;
- (NSString *)getGolgiId
{
    return golgiId;
}
- (void)setGolgiId:(NSString *)_golgiId
{
    golgiId = _golgiId;
    golgiIdIsSet = (_golgiId != nil) ? YES : NO;
}
@synthesize queryIsSet;
- (NSString *)getQuery
{
    return query;
}
- (void)setQuery:(NSString *)_query
{
    query = _query;
    queryIsSet = (_query != nil) ? YES : NO;
}

+ (TweetFilter *)deserialiseFromString: (NSString *)string
{
    return [TweetFilter deserialiseFromPayload:[GolgiPayload payloadWithString:string]];
}

+ (TweetFilter *)deserialiseFromPayload: (GolgiPayload *)payload
{
    TweetFilter *inst = [[TweetFilter alloc] initWithIsSet:NO];
    BOOL corrupt = NO;

    {
        NSString *str;
        if((str = [payload getStringWithTag:@"1:"]) != nil){
            inst.golgiId = str;
        }
        else{
            corrupt = YES;
        }
    }

    {
        NSString *str;
        if((str = [payload getStringWithTag:@"2:"]) != nil){
            inst.query = str;
        }
        else{
            corrupt = YES;
        }
    }

    return (corrupt) ? nil : inst;
}

- (NSString *)serialise
{
    return [self serialiseWithPrefix:@""];
}

- (NSString *)serialiseWithPrefix:(NSString *)prefix
{
    NSMutableString *str = [[NSMutableString alloc] init];

    if(golgiIdIsSet){
        [str appendFormat:@"%@1: \"%@\"\n", prefix, [CSL  NTLEscapeString:golgiId]];
    }
    if(queryIsSet){
        [str appendFormat:@"%@2: \"%@\"\n", prefix, [CSL  NTLEscapeString:query]];
    }

    return [NSString stringWithString:str];
}

- (TweetFilter *)init
{
    return [self initWithIsSet:YES];
}

- (id)initWithIsSet:(BOOL)defIsSet
{
    if((self = [super init]) != nil){
        golgiId = @"";
        golgiIdIsSet = defIsSet;
        query = @"";
        queryIsSet = defIsSet;
    }

    return self;

}

@end
@implementation TweetDetails

@synthesize usernameIsSet;
- (NSString *)getUsername
{
    return username;
}
- (void)setUsername:(NSString *)_username
{
    username = _username;
    usernameIsSet = (_username != nil) ? YES : NO;
}
@synthesize nameIsSet;
- (NSString *)getName
{
    return name;
}
- (void)setName:(NSString *)_name
{
    name = _name;
    nameIsSet = (_name != nil) ? YES : NO;
}
@synthesize imageIsSet;
- (NSData *)getImage
{
    return image;
}
- (void)setImage:(NSData *)_image
{
    image = _image;
    imageIsSet = (_image != nil) ? YES : NO;
}
@synthesize timestampIsSet;
- (NSInteger)getTimestamp
{
    return timestamp;
}
- (void)setTimestamp:(NSInteger )_timestamp
{
    timestamp = _timestamp;
    timestampIsSet = YES;
}
@synthesize textIsSet;
- (NSString *)getText
{
    return text;
}
- (void)setText:(NSString *)_text
{
    text = _text;
    textIsSet = (_text != nil) ? YES : NO;
}

+ (TweetDetails *)deserialiseFromString: (NSString *)string
{
    return [TweetDetails deserialiseFromPayload:[GolgiPayload payloadWithString:string]];
}

+ (TweetDetails *)deserialiseFromPayload: (GolgiPayload *)payload
{
    TweetDetails *inst = [[TweetDetails alloc] initWithIsSet:NO];
    BOOL corrupt = NO;

    {
        NSString *str;
        if((str = [payload getStringWithTag:@"1:"]) != nil){
            inst.username = str;
        }
        else{
            corrupt = YES;
        }
    }

    {
        NSString *str;
        if((str = [payload getStringWithTag:@"2:"]) != nil){
            inst.name = str;
        }
        else{
            corrupt = YES;
        }
    }

    {
        NSString *str;
        if((str = [payload getB64DataWithTag:@"3:"]) != nil){
            inst.image = [GolgiB64 decodeData:str];
        }
        else{
            corrupt = YES;
        }
    }

    {
        NSNumber *num;
        if((num = [payload getIntWithTag:@"4:"]) != nil){
            inst.timestamp = [num intValue];
        }
        else{
            corrupt = YES;
        }
    }

    {
        NSString *str;
        if((str = [payload getStringWithTag:@"5:"]) != nil){
            inst.text = str;
        }
        else{
            corrupt = YES;
        }
    }

    return (corrupt) ? nil : inst;
}

- (NSString *)serialise
{
    return [self serialiseWithPrefix:@""];
}

- (NSString *)serialiseWithPrefix:(NSString *)prefix
{
    NSMutableString *str = [[NSMutableString alloc] init];

    if(usernameIsSet){
        [str appendFormat:@"%@1: \"%@\"\n", prefix, [CSL  NTLEscapeString:username]];
    }
    if(nameIsSet){
        [str appendFormat:@"%@2: \"%@\"\n", prefix, [CSL  NTLEscapeString:name]];
    }
    if(imageIsSet){
        [str appendFormat:@"%@3: [%@]\n", prefix, [GolgiB64 encodeData:image withNewLines:NO]];
    }
    if(timestampIsSet){
        [str appendFormat:@"%@4: %ld\n", prefix, (long)timestamp];
    }
    if(textIsSet){
        [str appendFormat:@"%@5: \"%@\"\n", prefix, [CSL  NTLEscapeString:text]];
    }

    return [NSString stringWithString:str];
}

- (TweetDetails *)init
{
    return [self initWithIsSet:YES];
}

- (id)initWithIsSet:(BOOL)defIsSet
{
    if((self = [super init]) != nil){
        username = @"";
        usernameIsSet = defIsSet;
        name = @"";
        nameIsSet = defIsSet;
        image = [[NSData alloc] init];
        imageIsSet = defIsSet;
        timestampIsSet = defIsSet;
        text = @"";
        textIsSet = defIsSet;
    }

    return self;

}

@end
@implementation TwipWire_stopStreaming_reqArg
@synthesize golgiIdIsSet;
- (NSString *)getGolgiId
{
    return golgiId;
}
- (void)setGolgiId:(NSString *)_golgiId
{
    golgiId = _golgiId;
    golgiIdIsSet = (_golgiId != nil) ? YES : NO;
}
+ (TwipWire_stopStreaming_reqArg *)deserialiseFromString: (NSString *)string
{
    return [TwipWire_stopStreaming_reqArg deserialiseFromPayload:[GolgiPayload payloadWithString:string]];
}
+ (TwipWire_stopStreaming_reqArg *)deserialiseFromPayload: (GolgiPayload *)payload
{
    TwipWire_stopStreaming_reqArg *inst = [[TwipWire_stopStreaming_reqArg alloc] initWithIsSet:NO];
    BOOL corrupt = NO;
    {
        NSString *str;
        if((str = [payload getStringWithTag:@"1:"]) != nil){
            inst.golgiId = str;
        }
        else{
            corrupt = YES;
        }
    }
    return (corrupt) ? nil : inst;
}
- (NSString *)serialise
{
    return [self serialiseWithPrefix:@""];
}
- (NSString *)serialiseWithPrefix:(NSString *)prefix
{
    NSMutableString *str = [[NSMutableString alloc] init];
    if(golgiIdIsSet){
        [str appendFormat:@"%@1: \"%@\"\n", prefix, [CSL  NTLEscapeString:golgiId]];
    }
    return [NSString stringWithString:str];
}
- (TwipWire_stopStreaming_reqArg *)init
{
    return [self initWithIsSet:YES];
}
- (id)initWithIsSet:(BOOL)defIsSet
{
    if((self = [super init]) != nil){
        golgiId = @"";
        golgiIdIsSet = defIsSet;
    }
    return self;
}
@end
@implementation TwipWire_stopStreaming_rspArg
@synthesize internalSuccess_IsSet;
- (NSInteger)getInternalSuccess_
{
    return internalSuccess_;
}
- (void)setInternalSuccess_:(NSInteger )_internalSuccess_
{
    internalSuccess_ = _internalSuccess_;
    internalSuccess_IsSet = YES;
}
@synthesize golgiExceptionIsSet;
- (GolgiException *)getGolgiException
{
    return golgiException;
}
- (void)setGolgiException:(GolgiException *)_golgiException
{
    golgiException = _golgiException;
    golgiExceptionIsSet = (_golgiException != nil) ? YES : NO;
}
+ (TwipWire_stopStreaming_rspArg *)deserialiseFromString: (NSString *)string
{
    return [TwipWire_stopStreaming_rspArg deserialiseFromPayload:[GolgiPayload payloadWithString:string]];
}
+ (TwipWire_stopStreaming_rspArg *)deserialiseFromPayload: (GolgiPayload *)payload
{
    TwipWire_stopStreaming_rspArg *inst = [[TwipWire_stopStreaming_rspArg alloc] initWithIsSet:NO];
    BOOL corrupt = NO;
    {
        NSNumber *num;
        if((num = [payload getIntWithTag:@"1:"]) != nil){
            inst.internalSuccess_ = [num intValue];
        }
    }
    {
        GolgiPayload *nestedPayload;
        if((nestedPayload = [payload getNestedWithTag:@"3"]) != nil){
            [inst setGolgiException:[GolgiException deserialiseFromPayload:nestedPayload]];
        }
        else{
            [inst setGolgiException:nil];
        }
    }
    return (corrupt) ? nil : inst;
}
- (NSString *)serialise
{
    return [self serialiseWithPrefix:@""];
}
- (NSString *)serialiseWithPrefix:(NSString *)prefix
{
    NSMutableString *str = [[NSMutableString alloc] init];
    if(internalSuccess_IsSet){
        [str appendFormat:@"%@1: %ld\n", prefix, (long)internalSuccess_];
    }
    if(golgiExceptionIsSet){
        [str appendString:[golgiException serialiseWithPrefix:[NSString stringWithFormat:@"%@%s.", prefix, "3"]]];
    }
    return [NSString stringWithString:str];
}
- (TwipWire_stopStreaming_rspArg *)init
{
    return [self initWithIsSet:YES];
}
- (id)initWithIsSet:(BOOL)defIsSet
{
    if((self = [super init]) != nil){
        golgiException = [[GolgiException alloc] initWithIsSet:defIsSet];
    }
    return self;
}
@end
@implementation TwipWire_startStreaming_reqArg
@synthesize filterIsSet;
- (TweetFilter *)getFilter
{
    return filter;
}
- (void)setFilter:(TweetFilter *)_filter
{
    filter = _filter;
    filterIsSet = (_filter != nil) ? YES : NO;
}
+ (TwipWire_startStreaming_reqArg *)deserialiseFromString: (NSString *)string
{
    return [TwipWire_startStreaming_reqArg deserialiseFromPayload:[GolgiPayload payloadWithString:string]];
}
+ (TwipWire_startStreaming_reqArg *)deserialiseFromPayload: (GolgiPayload *)payload
{
    TwipWire_startStreaming_reqArg *inst = [[TwipWire_startStreaming_reqArg alloc] initWithIsSet:NO];
    BOOL corrupt = NO;
    {
        GolgiPayload *nestedPayload;
        if((nestedPayload = [payload getNestedWithTag:@"1"]) != nil){
            [inst setFilter:[TweetFilter deserialiseFromPayload:nestedPayload]];
        }
        else{
            [inst setFilter:nil];
        }
    }
    if([inst getFilter] == nil){
        corrupt = YES;
    }
    return (corrupt) ? nil : inst;
}
- (NSString *)serialise
{
    return [self serialiseWithPrefix:@""];
}
- (NSString *)serialiseWithPrefix:(NSString *)prefix
{
    NSMutableString *str = [[NSMutableString alloc] init];
    if(filterIsSet){
        [str appendString:[filter serialiseWithPrefix:[NSString stringWithFormat:@"%@%s.", prefix, "1"]]];
    }
    return [NSString stringWithString:str];
}
- (TwipWire_startStreaming_reqArg *)init
{
    return [self initWithIsSet:YES];
}
- (id)initWithIsSet:(BOOL)defIsSet
{
    if((self = [super init]) != nil){
        filter = [[TweetFilter alloc] initWithIsSet:defIsSet];
        filterIsSet = defIsSet;
    }
    return self;
}
@end
@implementation TwipWire_startStreaming_rspArg
@synthesize internalSuccess_IsSet;
- (NSInteger)getInternalSuccess_
{
    return internalSuccess_;
}
- (void)setInternalSuccess_:(NSInteger )_internalSuccess_
{
    internalSuccess_ = _internalSuccess_;
    internalSuccess_IsSet = YES;
}
@synthesize golgiExceptionIsSet;
- (GolgiException *)getGolgiException
{
    return golgiException;
}
- (void)setGolgiException:(GolgiException *)_golgiException
{
    golgiException = _golgiException;
    golgiExceptionIsSet = (_golgiException != nil) ? YES : NO;
}
+ (TwipWire_startStreaming_rspArg *)deserialiseFromString: (NSString *)string
{
    return [TwipWire_startStreaming_rspArg deserialiseFromPayload:[GolgiPayload payloadWithString:string]];
}
+ (TwipWire_startStreaming_rspArg *)deserialiseFromPayload: (GolgiPayload *)payload
{
    TwipWire_startStreaming_rspArg *inst = [[TwipWire_startStreaming_rspArg alloc] initWithIsSet:NO];
    BOOL corrupt = NO;
    {
        NSNumber *num;
        if((num = [payload getIntWithTag:@"1:"]) != nil){
            inst.internalSuccess_ = [num intValue];
        }
    }
    {
        GolgiPayload *nestedPayload;
        if((nestedPayload = [payload getNestedWithTag:@"3"]) != nil){
            [inst setGolgiException:[GolgiException deserialiseFromPayload:nestedPayload]];
        }
        else{
            [inst setGolgiException:nil];
        }
    }
    return (corrupt) ? nil : inst;
}
- (NSString *)serialise
{
    return [self serialiseWithPrefix:@""];
}
- (NSString *)serialiseWithPrefix:(NSString *)prefix
{
    NSMutableString *str = [[NSMutableString alloc] init];
    if(internalSuccess_IsSet){
        [str appendFormat:@"%@1: %ld\n", prefix, (long)internalSuccess_];
    }
    if(golgiExceptionIsSet){
        [str appendString:[golgiException serialiseWithPrefix:[NSString stringWithFormat:@"%@%s.", prefix, "3"]]];
    }
    return [NSString stringWithString:str];
}
- (TwipWire_startStreaming_rspArg *)init
{
    return [self initWithIsSet:YES];
}
- (id)initWithIsSet:(BOOL)defIsSet
{
    if((self = [super init]) != nil){
        golgiException = [[GolgiException alloc] initWithIsSet:defIsSet];
    }
    return self;
}
@end
@implementation TwipWire_newTweet_reqArg
@synthesize tweetDetailsIsSet;
- (TweetDetails *)getTweetDetails
{
    return tweetDetails;
}
- (void)setTweetDetails:(TweetDetails *)_tweetDetails
{
    tweetDetails = _tweetDetails;
    tweetDetailsIsSet = (_tweetDetails != nil) ? YES : NO;
}
+ (TwipWire_newTweet_reqArg *)deserialiseFromString: (NSString *)string
{
    return [TwipWire_newTweet_reqArg deserialiseFromPayload:[GolgiPayload payloadWithString:string]];
}
+ (TwipWire_newTweet_reqArg *)deserialiseFromPayload: (GolgiPayload *)payload
{
    TwipWire_newTweet_reqArg *inst = [[TwipWire_newTweet_reqArg alloc] initWithIsSet:NO];
    BOOL corrupt = NO;
    {
        GolgiPayload *nestedPayload;
        if((nestedPayload = [payload getNestedWithTag:@"1"]) != nil){
            [inst setTweetDetails:[TweetDetails deserialiseFromPayload:nestedPayload]];
        }
        else{
            [inst setTweetDetails:nil];
        }
    }
    if([inst getTweetDetails] == nil){
        corrupt = YES;
    }
    return (corrupt) ? nil : inst;
}
- (NSString *)serialise
{
    return [self serialiseWithPrefix:@""];
}
- (NSString *)serialiseWithPrefix:(NSString *)prefix
{
    NSMutableString *str = [[NSMutableString alloc] init];
    if(tweetDetailsIsSet){
        [str appendString:[tweetDetails serialiseWithPrefix:[NSString stringWithFormat:@"%@%s.", prefix, "1"]]];
    }
    return [NSString stringWithString:str];
}
- (TwipWire_newTweet_reqArg *)init
{
    return [self initWithIsSet:YES];
}
- (id)initWithIsSet:(BOOL)defIsSet
{
    if((self = [super init]) != nil){
        tweetDetails = [[TweetDetails alloc] initWithIsSet:defIsSet];
        tweetDetailsIsSet = defIsSet;
    }
    return self;
}
@end
@implementation TwipWire_newTweet_rspArg
@synthesize internalSuccess_IsSet;
- (NSInteger)getInternalSuccess_
{
    return internalSuccess_;
}
- (void)setInternalSuccess_:(NSInteger )_internalSuccess_
{
    internalSuccess_ = _internalSuccess_;
    internalSuccess_IsSet = YES;
}
@synthesize golgiExceptionIsSet;
- (GolgiException *)getGolgiException
{
    return golgiException;
}
- (void)setGolgiException:(GolgiException *)_golgiException
{
    golgiException = _golgiException;
    golgiExceptionIsSet = (_golgiException != nil) ? YES : NO;
}
+ (TwipWire_newTweet_rspArg *)deserialiseFromString: (NSString *)string
{
    return [TwipWire_newTweet_rspArg deserialiseFromPayload:[GolgiPayload payloadWithString:string]];
}
+ (TwipWire_newTweet_rspArg *)deserialiseFromPayload: (GolgiPayload *)payload
{
    TwipWire_newTweet_rspArg *inst = [[TwipWire_newTweet_rspArg alloc] initWithIsSet:NO];
    BOOL corrupt = NO;
    {
        NSNumber *num;
        if((num = [payload getIntWithTag:@"1:"]) != nil){
            inst.internalSuccess_ = [num intValue];
        }
    }
    {
        GolgiPayload *nestedPayload;
        if((nestedPayload = [payload getNestedWithTag:@"3"]) != nil){
            [inst setGolgiException:[GolgiException deserialiseFromPayload:nestedPayload]];
        }
        else{
            [inst setGolgiException:nil];
        }
    }
    return (corrupt) ? nil : inst;
}
- (NSString *)serialise
{
    return [self serialiseWithPrefix:@""];
}
- (NSString *)serialiseWithPrefix:(NSString *)prefix
{
    NSMutableString *str = [[NSMutableString alloc] init];
    if(internalSuccess_IsSet){
        [str appendFormat:@"%@1: %ld\n", prefix, (long)internalSuccess_];
    }
    if(golgiExceptionIsSet){
        [str appendString:[golgiException serialiseWithPrefix:[NSString stringWithFormat:@"%@%s.", prefix, "3"]]];
    }
    return [NSString stringWithString:str];
}
- (TwipWire_newTweet_rspArg *)init
{
    return [self initWithIsSet:YES];
}
- (id)initWithIsSet:(BOOL)defIsSet
{
    if((self = [super init]) != nil){
        golgiException = [[GolgiException alloc] initWithIsSet:defIsSet];
    }
    return self;
}
@end

@interface StopStreamingInternalResultSender : NSObject <TwipWireStopStreamingResultSender>
{
    NSString *sender;
    NSString *msgId;
    TwipWire_stopStreaming_rspArg *rsp;
}
- (StopStreamingInternalResultSender *) initWithSender:(NSString *)sender andMessageId:(NSString *)msgId;
@end
@implementation StopStreamingInternalResultSender
- (StopStreamingInternalResultSender *) initWithSender:(NSString *)_sender andMessageId:(NSString *)_msgId
{
    self = [self init];
    sender = _sender;
    msgId = _msgId;
    rsp = [[TwipWire_stopStreaming_rspArg alloc] initWithIsSet:NO];

    return self;
}

- (void)sendResponse
{
    [Golgi sendResponsePayload:[rsp serialise] to:sender forMethod:@"stopStreaming.TwipWire" withMessageId:msgId];
}

- (void)failureWithGolgiException:(GolgiException *)golgiException
{
    [rsp setGolgiException:golgiException];
    [self sendResponse];
}

- (void)success
{
    [rsp setInternalSuccess_:1];
    [self sendResponse];
}

@end

@interface StopStreamingInternalRequestHandler : NSObject <GolgiInternalInboundRequestHandler>
{
    id<TwipWireStopStreamingRequestReceiver> receiver;
}

- (StopStreamingInternalRequestHandler *)initWithReceiver:(id<TwipWireStopStreamingRequestReceiver>)receiver;
@end

@implementation StopStreamingInternalRequestHandler

- (void)incomingMsg:(NSString *)payload from:(NSString *)sender withMessageId:(NSString *)msgId
{
    TwipWire_stopStreaming_reqArg *req = [TwipWire_stopStreaming_reqArg deserialiseFromString:payload];

    if(req == nil){
        [Golgi sendRemoteError:@"Garbled Payload at Remote End" to:sender forMethod:@"stopStreaming.TwipWire" withMessageId:msgId];
    }
    else{
        // Process req here
        StopStreamingInternalResultSender *resultSender;
        resultSender = [StopStreamingInternalResultSender alloc];
        resultSender = [resultSender initWithSender:sender andMessageId:msgId];
        [receiver stopStreamingWithResultSender:resultSender andGolgiId:[req getGolgiId]];
    }
}

- (StopStreamingInternalRequestHandler *)initWithReceiver:(id<TwipWireStopStreamingRequestReceiver>)_receiver
{
    self = [self init];
    receiver = _receiver;

    return self;
}
@end

@interface StopStreamingInternalResponseHandler : NSObject <GolgiInternalInboundResponseHandler>
{
    id<TwipWireStopStreamingResultReceiver> receiver;
}

- (StopStreamingInternalResponseHandler *)initWithReceiver:(id<TwipWireStopStreamingResultReceiver>)receiver;
@end
@implementation StopStreamingInternalResponseHandler

- (void)processResponsePayload:(NSString *)payload
{
    TwipWire_stopStreaming_rspArg *rsp = [TwipWire_stopStreaming_rspArg deserialiseFromString:payload];

    if(rsp == nil){
        GolgiException *golgiException = [[GolgiException alloc]init];

        [golgiException setErrText:@"Corrupt Response"];
        [golgiException setErrType:GOLGI_ERRTYPE_PAYLOAD_MISMATCH];
        [receiver failureWithGolgiException:golgiException];
    }
    else if(rsp.internalSuccess_IsSet && ([rsp getInternalSuccess_] != 0)){
        [receiver success];
    }
    else if(rsp.golgiExceptionIsSet){
        [receiver failureWithGolgiException:[rsp getGolgiException]];
    }
    else{
        NSLog(@"WARNING: result for 'stopStreaming' in Golgi Service 'TwipWire' has no expected response fields set!");
    }

}

- (void)processGolgiException:(GolgiException *)golgiException
{
	[receiver failureWithGolgiException:golgiException];
}

- (StopStreamingInternalResponseHandler *)initWithReceiver:(id<TwipWireStopStreamingResultReceiver>)_receiver
{
    self = [self init];
    receiver = _receiver;
    return self;
}

@end


@interface StartStreamingInternalResultSender : NSObject <TwipWireStartStreamingResultSender>
{
    NSString *sender;
    NSString *msgId;
    TwipWire_startStreaming_rspArg *rsp;
}
- (StartStreamingInternalResultSender *) initWithSender:(NSString *)sender andMessageId:(NSString *)msgId;
@end
@implementation StartStreamingInternalResultSender
- (StartStreamingInternalResultSender *) initWithSender:(NSString *)_sender andMessageId:(NSString *)_msgId
{
    self = [self init];
    sender = _sender;
    msgId = _msgId;
    rsp = [[TwipWire_startStreaming_rspArg alloc] initWithIsSet:NO];

    return self;
}

- (void)sendResponse
{
    [Golgi sendResponsePayload:[rsp serialise] to:sender forMethod:@"startStreaming.TwipWire" withMessageId:msgId];
}

- (void)failureWithGolgiException:(GolgiException *)golgiException
{
    [rsp setGolgiException:golgiException];
    [self sendResponse];
}

- (void)success
{
    [rsp setInternalSuccess_:1];
    [self sendResponse];
}

@end

@interface StartStreamingInternalRequestHandler : NSObject <GolgiInternalInboundRequestHandler>
{
    id<TwipWireStartStreamingRequestReceiver> receiver;
}

- (StartStreamingInternalRequestHandler *)initWithReceiver:(id<TwipWireStartStreamingRequestReceiver>)receiver;
@end

@implementation StartStreamingInternalRequestHandler

- (void)incomingMsg:(NSString *)payload from:(NSString *)sender withMessageId:(NSString *)msgId
{
    TwipWire_startStreaming_reqArg *req = [TwipWire_startStreaming_reqArg deserialiseFromString:payload];

    if(req == nil){
        [Golgi sendRemoteError:@"Garbled Payload at Remote End" to:sender forMethod:@"startStreaming.TwipWire" withMessageId:msgId];
    }
    else{
        // Process req here
        StartStreamingInternalResultSender *resultSender;
        resultSender = [StartStreamingInternalResultSender alloc];
        resultSender = [resultSender initWithSender:sender andMessageId:msgId];
        [receiver startStreamingWithResultSender:resultSender andFilter:[req getFilter]];
    }
}

- (StartStreamingInternalRequestHandler *)initWithReceiver:(id<TwipWireStartStreamingRequestReceiver>)_receiver
{
    self = [self init];
    receiver = _receiver;

    return self;
}
@end

@interface StartStreamingInternalResponseHandler : NSObject <GolgiInternalInboundResponseHandler>
{
    id<TwipWireStartStreamingResultReceiver> receiver;
}

- (StartStreamingInternalResponseHandler *)initWithReceiver:(id<TwipWireStartStreamingResultReceiver>)receiver;
@end
@implementation StartStreamingInternalResponseHandler

- (void)processResponsePayload:(NSString *)payload
{
    TwipWire_startStreaming_rspArg *rsp = [TwipWire_startStreaming_rspArg deserialiseFromString:payload];

    if(rsp == nil){
        GolgiException *golgiException = [[GolgiException alloc]init];

        [golgiException setErrText:@"Corrupt Response"];
        [golgiException setErrType:GOLGI_ERRTYPE_PAYLOAD_MISMATCH];
        [receiver failureWithGolgiException:golgiException];
    }
    else if(rsp.internalSuccess_IsSet && ([rsp getInternalSuccess_] != 0)){
        [receiver success];
    }
    else if(rsp.golgiExceptionIsSet){
        [receiver failureWithGolgiException:[rsp getGolgiException]];
    }
    else{
        NSLog(@"WARNING: result for 'startStreaming' in Golgi Service 'TwipWire' has no expected response fields set!");
    }

}

- (void)processGolgiException:(GolgiException *)golgiException
{
	[receiver failureWithGolgiException:golgiException];
}

- (StartStreamingInternalResponseHandler *)initWithReceiver:(id<TwipWireStartStreamingResultReceiver>)_receiver
{
    self = [self init];
    receiver = _receiver;
    return self;
}

@end


@interface NewTweetInternalResultSender : NSObject <TwipWireNewTweetResultSender>
{
    NSString *sender;
    NSString *msgId;
    TwipWire_newTweet_rspArg *rsp;
}
- (NewTweetInternalResultSender *) initWithSender:(NSString *)sender andMessageId:(NSString *)msgId;
@end
@implementation NewTweetInternalResultSender
- (NewTweetInternalResultSender *) initWithSender:(NSString *)_sender andMessageId:(NSString *)_msgId
{
    self = [self init];
    sender = _sender;
    msgId = _msgId;
    rsp = [[TwipWire_newTweet_rspArg alloc] initWithIsSet:NO];

    return self;
}

- (void)sendResponse
{
    [Golgi sendResponsePayload:[rsp serialise] to:sender forMethod:@"newTweet.TwipWire" withMessageId:msgId];
}

- (void)failureWithGolgiException:(GolgiException *)golgiException
{
    [rsp setGolgiException:golgiException];
    [self sendResponse];
}

- (void)success
{
    [rsp setInternalSuccess_:1];
    [self sendResponse];
}

@end

@interface NewTweetInternalRequestHandler : NSObject <GolgiInternalInboundRequestHandler>
{
    id<TwipWireNewTweetRequestReceiver> receiver;
}

- (NewTweetInternalRequestHandler *)initWithReceiver:(id<TwipWireNewTweetRequestReceiver>)receiver;
@end

@implementation NewTweetInternalRequestHandler

- (void)incomingMsg:(NSString *)payload from:(NSString *)sender withMessageId:(NSString *)msgId
{
    TwipWire_newTweet_reqArg *req = [TwipWire_newTweet_reqArg deserialiseFromString:payload];

    if(req == nil){
        [Golgi sendRemoteError:@"Garbled Payload at Remote End" to:sender forMethod:@"newTweet.TwipWire" withMessageId:msgId];
    }
    else{
        // Process req here
        NewTweetInternalResultSender *resultSender;
        resultSender = [NewTweetInternalResultSender alloc];
        resultSender = [resultSender initWithSender:sender andMessageId:msgId];
        [receiver newTweetWithResultSender:resultSender andTweetDetails:[req getTweetDetails]];
    }
}

- (NewTweetInternalRequestHandler *)initWithReceiver:(id<TwipWireNewTweetRequestReceiver>)_receiver
{
    self = [self init];
    receiver = _receiver;

    return self;
}
@end

@interface NewTweetInternalResponseHandler : NSObject <GolgiInternalInboundResponseHandler>
{
    id<TwipWireNewTweetResultReceiver> receiver;
}

- (NewTweetInternalResponseHandler *)initWithReceiver:(id<TwipWireNewTweetResultReceiver>)receiver;
@end
@implementation NewTweetInternalResponseHandler

- (void)processResponsePayload:(NSString *)payload
{
    TwipWire_newTweet_rspArg *rsp = [TwipWire_newTweet_rspArg deserialiseFromString:payload];

    if(rsp == nil){
        GolgiException *golgiException = [[GolgiException alloc]init];

        [golgiException setErrText:@"Corrupt Response"];
        [golgiException setErrType:GOLGI_ERRTYPE_PAYLOAD_MISMATCH];
        [receiver failureWithGolgiException:golgiException];
    }
    else if(rsp.internalSuccess_IsSet && ([rsp getInternalSuccess_] != 0)){
        [receiver success];
    }
    else if(rsp.golgiExceptionIsSet){
        [receiver failureWithGolgiException:[rsp getGolgiException]];
    }
    else{
        NSLog(@"WARNING: result for 'newTweet' in Golgi Service 'TwipWire' has no expected response fields set!");
    }

}

- (void)processGolgiException:(GolgiException *)golgiException
{
	[receiver failureWithGolgiException:golgiException];
}

- (NewTweetInternalResponseHandler *)initWithReceiver:(id<TwipWireNewTweetResultReceiver>)_receiver
{
    self = [self init];
    receiver = _receiver;
    return self;
}

@end



/********************************************************/
/********************************************************/
/********************************************************/


@implementation TwipWireSvc
//
// stopStreaming
//
+ (void)sendStopStreamingUsingResultReceiver:(id<TwipWireStopStreamingResultReceiver>)resultReceiver andDestination:(NSString *)_dst withGolgiId:(NSString *)golgiId
{
    [self sendStopStreamingUsingResultReceiver:resultReceiver withTransportOptions:nil andDestination:_dst withGolgiId:golgiId];
}

//
// stopStreaming with transport options
//
+ (void)sendStopStreamingUsingResultReceiver:(id<TwipWireStopStreamingResultReceiver>)resultReceiver withTransportOptions:(GolgiTransportOptions *)options andDestination:(NSString *)_dst withGolgiId:(NSString *)golgiId
{
    NSString *_payload;
    TwipWire_stopStreaming_reqArg *_reqArg = [[TwipWire_stopStreaming_reqArg alloc] init];
    StopStreamingInternalResponseHandler *_iRspHndlr;
    _iRspHndlr = [StopStreamingInternalResponseHandler alloc];
    _iRspHndlr = [_iRspHndlr initWithReceiver:resultReceiver];

    [_reqArg setGolgiId:golgiId];
    _payload = [_reqArg serialise];

    [Golgi sendRequestPayload:_payload withTransportOptions:options to:_dst withMethod:@"stopStreaming.TwipWire" andResponseHandler:_iRspHndlr];

}

+ (void)registerStopStreamingRequestReceiver:(id<TwipWireStopStreamingRequestReceiver>)requestReceiver
{
    StopStreamingInternalRequestHandler *reqHandler;
    reqHandler = [StopStreamingInternalRequestHandler alloc];
    reqHandler = [reqHandler initWithReceiver:requestReceiver];
    [Golgi registerRequestHandler:reqHandler forMethod:@"stopStreaming.TwipWire"];
}

//
// startStreaming
//
+ (void)sendStartStreamingUsingResultReceiver:(id<TwipWireStartStreamingResultReceiver>)resultReceiver andDestination:(NSString *)_dst withFilter:(TweetFilter *)filter
{
    [self sendStartStreamingUsingResultReceiver:resultReceiver withTransportOptions:nil andDestination:_dst withFilter:filter];
}

//
// startStreaming with transport options
//
+ (void)sendStartStreamingUsingResultReceiver:(id<TwipWireStartStreamingResultReceiver>)resultReceiver withTransportOptions:(GolgiTransportOptions *)options andDestination:(NSString *)_dst withFilter:(TweetFilter *)filter
{
    NSString *_payload;
    TwipWire_startStreaming_reqArg *_reqArg = [[TwipWire_startStreaming_reqArg alloc] init];
    StartStreamingInternalResponseHandler *_iRspHndlr;
    _iRspHndlr = [StartStreamingInternalResponseHandler alloc];
    _iRspHndlr = [_iRspHndlr initWithReceiver:resultReceiver];

    [_reqArg setFilter:filter];
    _payload = [_reqArg serialise];

    [Golgi sendRequestPayload:_payload withTransportOptions:options to:_dst withMethod:@"startStreaming.TwipWire" andResponseHandler:_iRspHndlr];

}

+ (void)registerStartStreamingRequestReceiver:(id<TwipWireStartStreamingRequestReceiver>)requestReceiver
{
    StartStreamingInternalRequestHandler *reqHandler;
    reqHandler = [StartStreamingInternalRequestHandler alloc];
    reqHandler = [reqHandler initWithReceiver:requestReceiver];
    [Golgi registerRequestHandler:reqHandler forMethod:@"startStreaming.TwipWire"];
}

//
// newTweet
//
+ (void)sendNewTweetUsingResultReceiver:(id<TwipWireNewTweetResultReceiver>)resultReceiver andDestination:(NSString *)_dst withTweetDetails:(TweetDetails *)tweetDetails
{
    [self sendNewTweetUsingResultReceiver:resultReceiver withTransportOptions:nil andDestination:_dst withTweetDetails:tweetDetails];
}

//
// newTweet with transport options
//
+ (void)sendNewTweetUsingResultReceiver:(id<TwipWireNewTweetResultReceiver>)resultReceiver withTransportOptions:(GolgiTransportOptions *)options andDestination:(NSString *)_dst withTweetDetails:(TweetDetails *)tweetDetails
{
    NSString *_payload;
    TwipWire_newTweet_reqArg *_reqArg = [[TwipWire_newTweet_reqArg alloc] init];
    NewTweetInternalResponseHandler *_iRspHndlr;
    _iRspHndlr = [NewTweetInternalResponseHandler alloc];
    _iRspHndlr = [_iRspHndlr initWithReceiver:resultReceiver];

    [_reqArg setTweetDetails:tweetDetails];
    _payload = [_reqArg serialise];

    [Golgi sendRequestPayload:_payload withTransportOptions:options to:_dst withMethod:@"newTweet.TwipWire" andResponseHandler:_iRspHndlr];

}

+ (void)registerNewTweetRequestReceiver:(id<TwipWireNewTweetRequestReceiver>)requestReceiver
{
    NewTweetInternalRequestHandler *reqHandler;
    reqHandler = [NewTweetInternalRequestHandler alloc];
    reqHandler = [reqHandler initWithReceiver:requestReceiver];
    [Golgi registerRequestHandler:reqHandler forMethod:@"newTweet.TwipWire"];
}

@end
