/* IS_AUTOGENERATED_SO_ALLOW_AUTODELETE=YES */
/* The previous line is to allow auto deletion */

package io.golgi.twipwire.gen;

import java.util.Hashtable;
import java.util.ArrayList;
import java.util.Iterator;
import com.openmindnetworks.golgi.JavaType;
import com.openmindnetworks.golgi.GolgiPayload;
import com.openmindnetworks.golgi.B64;
import com.openmindnetworks.golgi.api.GolgiException;
import com.openmindnetworks.golgi.api.GolgiAPI;

public class TweetDetails
{

    private boolean corrupt = false;

    public boolean isCorrupt() {
        return corrupt;
    }

    public void setCorrupt() {
        corrupt = true;
    }

    private boolean usernameIsSet = false;
    private String username;
    private boolean nameIsSet = false;
    private String name;
    private boolean imageIsSet = false;
    private byte[] image;
    private boolean timestampIsSet = false;
    private int timestamp;
    private boolean textIsSet = false;
    private String text;

    public String getUsername(){
        return username;
    }
    public boolean usernameIsSet(){
        return usernameIsSet;
    }
    public void setUsername(String username){
        this.username = username;
        this.usernameIsSet = true;
    }

    public String getName(){
        return name;
    }
    public boolean nameIsSet(){
        return nameIsSet;
    }
    public void setName(String name){
        this.name = name;
        this.nameIsSet = true;
    }

    public byte[] getImage(){
        return image;
    }
    public boolean imageIsSet(){
        return imageIsSet;
    }
    public void setImage(byte[] image){
        this.image = new byte[image.length];
        System.arraycopy(image, 0, this.image, 0, image.length);
        this.imageIsSet = true;
    }

    public int getTimestamp(){
        return timestamp;
    }
    public boolean timestampIsSet(){
        return timestampIsSet;
    }
    public void setTimestamp(int timestamp){
        this.timestamp = timestamp;
        this.timestampIsSet = true;
    }

    public String getText(){
        return text;
    }
    public boolean textIsSet(){
        return textIsSet;
    }
    public void setText(String text){
        this.text = text;
        this.textIsSet = true;
    }

    public StringBuffer serialise(){
        return serialise(null);
    }

    public StringBuffer serialise(StringBuffer sb){
        return serialise("", sb);
    }

    public StringBuffer serialise(String prefix, StringBuffer sb){
        if(sb == null){
            sb = new StringBuffer();
        }

        if(this.usernameIsSet){
            sb.append(prefix + "1: " + JavaType.encodeString(this.username) + "\n");
        }
        if(this.nameIsSet){
            sb.append(prefix + "2: " + JavaType.encodeString(this.name) + "\n");
        }
        if(this.imageIsSet){
            sb.append(prefix + "3: [" + B64.encode(this.image) + "]\n");
        }
        if(this.timestampIsSet){
            sb.append(prefix + "4: " + this.timestamp+"\n");
        }
        if(this.textIsSet){
            sb.append(prefix + "5: " + JavaType.encodeString(this.text) + "\n");
        }

        return sb;
    }

    private void deserialise(GolgiPayload payload){
        if(!isCorrupt() && payload.containsFieldKey("1:")){
            String val = payload.getField("1:");
            String str = JavaType.decodeString(val);
            if(str != null){
                setUsername(str);
            }
            else{
                setCorrupt();
            }
        }
        else{
            setCorrupt();
        }
        if(!isCorrupt() && payload.containsFieldKey("2:")){
            String val = payload.getField("2:");
            String str = JavaType.decodeString(val);
            if(str != null){
                setName(str);
            }
            else{
                setCorrupt();
            }
        }
        else{
            setCorrupt();
        }
        if(!isCorrupt() && payload.containsFieldKey("3:")){
            String val = payload.getField("3:");
            if(val.length() >= 2){
                val = val.substring(1, val.length()-1);
            }
            byte[] data = B64.decode(val);
            if(data != null){
                setImage(data);
            }
            else{
                setCorrupt();
            }
        }
        else{
            setCorrupt();
        }
        if(!isCorrupt() && payload.containsFieldKey("4:")){
            String str = payload.getField("4:");
            try{
                setTimestamp(Integer.valueOf(str));
            }
            catch(NumberFormatException nfe){
                setCorrupt();
            }
        }
        else{
            setCorrupt();
        }
        if(!isCorrupt() && payload.containsFieldKey("5:")){
            String val = payload.getField("5:");
            String str = JavaType.decodeString(val);
            if(str != null){
                setText(str);
            }
            else{
                setCorrupt();
            }
        }
        else{
            setCorrupt();
        }
    }

    public TweetDetails(){
        this(true);
    }

    public TweetDetails(boolean isSetDefault){
        super();
        usernameIsSet = isSetDefault;
        username = new String();
        nameIsSet = isSetDefault;
        name = new String();
        imageIsSet = isSetDefault;
        image = new byte[0];
        timestampIsSet = isSetDefault;
        timestamp = 0;
        textIsSet = isSetDefault;
        text = new String();
    }

    public TweetDetails(GolgiPayload payload){
        this(false);
        deserialise(payload);
    }

    public TweetDetails(String payload){
        this(JavaType.createPayload(payload));
    }

}
